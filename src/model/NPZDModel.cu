/**
 * @file
 *
 * @author Generated by spec2x
 * $Rev$
 * $Date$
 */
#include "NPZDModel.cuh"

NPZDModel::NPZDModel() : bi::BayesNet<
    GET_NODESPEC(NPZDInSpec),
    GET_NODESPEC(NPZDExSpec),
    GET_NODESPEC(NPZDRSpec),
    GET_NODESPEC(NPZDFSpec)>() {
  /* nodes */
  addNode(betaP);
  addNode(betaZ);
  addNode(betaN);
  addNode(betaD);
  addNode(T);
  addNode(E);
  addNode(L);
  addNode(betaE);
  addNode(muC);
  addNode(muCN);
  addNode(muCh);
  addNode(nuA);
  addNode(piNC);
  addNode(zetaI);
  addNode(zetaCl);
  addNode(zetaE);
  addNode(nuR);
  addNode(zetaQ);
  addNode(zetaL);
  addNode(alphaC);
  addNode(sigmaC);
  addNode(alphaCN);
  addNode(sigmaCN);
  addNode(alphaCh);
  addNode(sigmaCh);
  addNode(alphaA);
  addNode(sigmaA);
  addNode(alphaNC);
  addNode(sigmaNC);
  addNode(alphaI);
  addNode(sigmaI);
  addNode(alphaCl);
  addNode(sigmaCl);
  addNode(alphaE);
  addNode(sigmaE);
  addNode(alphaR);
  addNode(sigmaR);
  addNode(alphaQ);
  addNode(sigmaQ);
  addNode(alphaL);
  addNode(sigmaL);
  addNode(uC);
  addNode(uCN);
  addNode(uCh);
  addNode(uA);
  addNode(uNC);
  addNode(uI);
  addNode(uCl);
  addNode(uE);
  addNode(uR);
  addNode(uQ);
  addNode(uL);
  addNode(P);
  addNode(Z);
  addNode(D);
  addNode(N);

  /* edges */
  addEdge(muC, muC);
  addEdge(RP, muC);
  addEdge(alphaC, muC);
  addEdge(sigmaC, muC);
  addEdge(uC, muC);
  addEdge(muCN, muCN);
  addEdge(RP, muCN);
  addEdge(alphaCN, muCN);
  addEdge(sigmaCN, muCN);
  addEdge(uCN, muCN);
  addEdge(muCh, muCh);
  addEdge(RP, muCh);
  addEdge(alphaCh, muCh);
  addEdge(sigmaCh, muCh);
  addEdge(uCh, muCh);
  addEdge(nuA, nuA);
  addEdge(RP, nuA);
  addEdge(alphaA, nuA);
  addEdge(sigmaA, nuA);
  addEdge(uA, nuA);
  addEdge(piNC, piNC);
  addEdge(RP, piNC);
  addEdge(alphaNC, piNC);
  addEdge(sigmaNC, piNC);
  addEdge(uNC, piNC);
  addEdge(zetaI, zetaI);
  addEdge(RZ, zetaI);
  addEdge(alphaI, zetaI);
  addEdge(sigmaI, zetaI);
  addEdge(uI, zetaI);
  addEdge(zetaCl, zetaCl);
  addEdge(RZ, zetaCl);
  addEdge(alphaCl, zetaCl);
  addEdge(sigmaCl, zetaCl);
  addEdge(uCl, zetaCl);
  addEdge(zetaE, zetaE);
  addEdge(RZ, zetaE);
  addEdge(alphaE, zetaE);
  addEdge(sigmaE, zetaE);
  addEdge(uE, zetaE);
  addEdge(nuR, nuR);
  addEdge(RZ, nuR);
  addEdge(alphaR, nuR);
  addEdge(sigmaR, nuR);
  addEdge(uR, nuR);
  addEdge(zetaQ, zetaQ);
  addEdge(RZ, zetaQ);
  addEdge(alphaQ, zetaQ);
  addEdge(sigmaQ, zetaQ);
  addEdge(uQ, zetaQ);
  addEdge(zetaL, zetaL);
  addEdge(RZ, zetaL);
  addEdge(alphaL, zetaL);
  addEdge(sigmaL, zetaL);
  addEdge(uL, zetaL);
  addEdge(mu, P);
  addEdge(P, P);
  addEdge(piG, P);
  addEdge(betaE, P);
  addEdge(betaP, P);
  addEdge(piG, Z);
  addEdge(zetaE, Z);
  addEdge(zetaM, Z);
  addEdge(betaE, Z);
  addEdge(betaZ, Z);
  addEdge(Z, Z);
  addEdge(zetaE, D);
  addEdge(deltaI, D);
  addEdge(piG, D);
  addEdge(zetaM, D);
  addEdge(nuR, D);
  addEdge(deltaS, D);
  addEdge(D, D);
  addEdge(L, D);
  addEdge(betaE, D);
  addEdge(betaD, D);
  addEdge(mu, N);
  addEdge(P, N);
  addEdge(zetaE, N);
  addEdge(deltaI, N);
  addEdge(piG, N);
  addEdge(nuR, N);
  addEdge(betaE, N);
  addEdge(betaN, N);
  addEdge(N, N);
}

