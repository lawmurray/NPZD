/**
 * @file
 *
 * @author Generated by spec2x
 * $Rev$
 * $Date$
 */
#include "NPZDModel.cuh"

NPZDModel::NPZDModel() : bi::BayesNet<
    GET_NODESPEC(NPZDInSpec),
    GET_NODESPEC(NPZDExSpec),
    GET_NODESPEC(NPZDRSpec),
    GET_NODESPEC(NPZDFSpec)>() {
  /* nodes */
  addNode(betaP);
  addNode(betaZ);
  addNode(betaN);
  addNode(betaD);
  addNode(T);
  addNode(E);
  addNode(L);
  addNode(betaE);
  addNode(alphaC);
  addNode(sigmaC);
  addNode(alphaCN);
  addNode(sigmaCN);
  addNode(alphaCh);
  addNode(sigmaCh);
  addNode(alphaA);
  addNode(sigmaA);
  addNode(alphaNC);
  addNode(sigmaNC);
  addNode(alphaI);
  addNode(sigmaI);
  addNode(alphaCl);
  addNode(sigmaCl);
  addNode(alphaE);
  addNode(sigmaE);
  addNode(alphaR);
  addNode(sigmaR);
  addNode(alphaQ);
  addNode(sigmaQ);
  addNode(alphaL);
  addNode(sigmaL);
  addNode(uC);
  addNode(uCN);
  addNode(uCh);
  addNode(uA);
  addNode(uNC);
  addNode(uI);
  addNode(uCl);
  addNode(uE);
  addNode(uR);
  addNode(uQ);
  addNode(uL);
  addNode(muC);
  addNode(muCN);
  addNode(muCh);
  addNode(nuA);
  addNode(piNC);
  addNode(zetaI);
  addNode(zetaCl);
  addNode(zetaE);
  addNode(nuR);
  addNode(zetaQ);
  addNode(zetaL);
  addNode(P);
  addNode(Z);
  addNode(D);
  addNode(N);

  /* edges */
  addArc(muC, muC);
  addArc(alphaC, muC);
  addArc(sigmaC, muC);
  addArc(uC, muC);
  addArc(muCN, muCN);
  addArc(alphaCN, muCN);
  addArc(sigmaCN, muCN);
  addArc(uCN, muCN);
  addArc(muCh, muCh);
  addArc(alphaCh, muCh);
  addArc(sigmaCh, muCh);
  addArc(uCh, muCh);
  addArc(nuA, nuA);
  addArc(alphaA, nuA);
  addArc(sigmaA, nuA);
  addArc(uA, nuA);
  addArc(piNC, piNC);
  addArc(alphaNC, piNC);
  addArc(sigmaNC, piNC);
  addArc(uNC, piNC);
  addArc(zetaI, zetaI);
  addArc(alphaI, zetaI);
  addArc(sigmaI, zetaI);
  addArc(uI, zetaI);
  addArc(zetaCl, zetaCl);
  addArc(alphaCl, zetaCl);
  addArc(sigmaCl, zetaCl);
  addArc(uCl, zetaCl);
  addArc(zetaE, zetaE);
  addArc(alphaE, zetaE);
  addArc(sigmaE, zetaE);
  addArc(uE, zetaE);
  addArc(nuR, nuR);
  addArc(alphaR, nuR);
  addArc(sigmaR, nuR);
  addArc(uR, nuR);
  addArc(zetaQ, zetaQ);
  addArc(alphaQ, zetaQ);
  addArc(sigmaQ, zetaQ);
  addArc(uQ, zetaQ);
  addArc(zetaL, zetaL);
  addArc(alphaL, zetaL);
  addArc(sigmaL, zetaL);
  addArc(uL, zetaL);
  addArc(muC, P);
  addArc(T, P);
  addArc(muCh, P);
  addArc(E, P);
  addArc(N, P);
  addArc(muCN, P);
  addArc(nuA, P);
  addArc(P, P);
  addArc(Z, P);
  addArc(zetaI, P);
  addArc(zetaCl, P);
  addArc(betaE, P);
  addArc(betaP, P);
  addArc(Z, Z);
  addArc(zetaI, Z);
  addArc(T, Z);
  addArc(zetaCl, Z);
  addArc(P, Z);
  addArc(zetaE, Z);
  addArc(zetaQ, Z);
  addArc(zetaL, Z);
  addArc(betaE, Z);
  addArc(betaZ, Z);
  addArc(zetaE, D);
  addArc(Z, D);
  addArc(zetaI, D);
  addArc(T, D);
  addArc(zetaCl, D);
  addArc(P, D);
  addArc(zetaQ, D);
  addArc(zetaL, D);
  addArc(nuR, D);
  addArc(D, D);
  addArc(L, D);
  addArc(betaE, D);
  addArc(betaD, D);
  addArc(muC, N);
  addArc(T, N);
  addArc(muCh, N);
  addArc(E, N);
  addArc(N, N);
  addArc(muCN, N);
  addArc(nuA, N);
  addArc(P, N);
  addArc(zetaE, N);
  addArc(Z, N);
  addArc(zetaI, N);
  addArc(zetaCl, N);
  addArc(nuR, N);
  addArc(betaE, N);
  addArc(betaN, N);
}

