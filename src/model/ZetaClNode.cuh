/**
 * @file
 * 
 * @author Generated by spec2x
 * $Rev$
 * $Date$
 */
#ifndef BIM_NPZD_ZETACLNODE_CUH
#define BIM_NPZD_ZETACLNODE_CUH

#include "bi/model/BayesNode.hpp"
#include "bi/cuda/cuda.hpp"

/**
 * \f$\zeta^{Cl}\f$; Zooplankton clearance rate
 *
 * \f$\zeta^{Cl}(1-R_Z) + R_Z  (\alpha^{Cl} + \sigma^{Cl} u^{Cl})\f$
 */
class ZetaClNode : public bi::BayesNode {
public:
  template<class V1, class V2, class V3, class V4>
  static CUDA_FUNC_BOTH void s(const V1& fpax, const V2& rpax,
      const V3& inpax, V4& x);
};

#include "bi/model/NodeStaticTraits.hpp"
#include "bi/model/NodeTypeTraits.hpp"

IS_GENERIC_STATIC(ZetaClNode)
IS_IN_NODE(ZetaClNode)

template<class V1, class V2, class V3, class V4>
inline void ZetaClNode::s(const V1& fpax, const V2& rpax,
    const V3& inpax, V4& x) {
  const real_t RZ = CUDA_REAL(0);

  const real_t zetaCl = inpax[0];
  const real_t alphaCl = inpax[1];
  const real_t sigmaCl = inpax[2];
  const real_t uCl = rpax[0];

  x = zetaCl*(1 - RZ) + RZ*(alphaCl + sigmaCl*uCl);
}

#endif

