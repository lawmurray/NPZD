/**
 * @file
 * 
 * @author Generated by spec2x
 * $Rev$
 * $Date$
 */
#ifndef BIM_NPZD_MUCHNODE_CUH
#define BIM_NPZD_MUCHNODE_CUH

#include "bi/model/BayesNode.hpp"
#include "bi/cuda/cuda.hpp"

/**
 * \f$\mu^{Ch}\f$; Maximum growth rate for Chl-a:C
 *
 * \f$\mu^{Ch}(1-R_P) + R_P  (\alpha^{Ch} + \sigma^{Ch} u^{Ch})\f$
 */
class MuChNode : public bi::BayesNode {
public:
  template<class V1, class V2, class V3, class V4>
  static CUDA_FUNC_BOTH void s(const V1& fpax, const V2& rpax,
      const V3& inpax, V4& x);
};

#include "bi/model/NodeStaticTraits.hpp"
#include "bi/model/NodeTypeTraits.hpp"

IS_GENERIC_STATIC(MuChNode)
IS_IN_NODE(MuChNode)

template<class V1, class V2, class V3, class V4>
inline void MuChNode::s(const V1& fpax, const V2& rpax,
    const V3& inpax, V4& x) {
  const real_t RP = CUDA_REAL(0);

  const real_t muCh = inpax[0];
  const real_t alphaCh = inpax[1];
  const real_t sigmaCh = inpax[2];
  const real_t uCh = rpax[0];

  x = muCh*(1 - RP) + RP*(alphaCh + sigmaCh*uCh);
}

#endif

